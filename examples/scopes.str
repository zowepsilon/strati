const assert_is = fun (T: Type) {
    fun (x: T) {}
}

let x = 42

const Crate = .Box(String)
const Group = .Group(
    Int,                    // identity
    Fun(Int, Int) -> Int,   // operation
    Fun(Int) -> Int         // inverse
)

let my_box = .Box("some food")

assert_is(Int)(x)
assert_is(Crate)(my_box)

let f = {
    let x = "hello"

    assert_is(String)(x)

    fun () -> String {
        x
    }
}

let z = f() // "hello"

let not_a_group: Group = .Group(
    42,
    fun(x: Int, y: Int) -> Int { x },
    fun(x: Int) -> Int { x }
)
