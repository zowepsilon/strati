digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
letter = "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" 
       | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" 
       | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m"
       | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"

identifier = (letter | "_"), (letter | digit | "_")*
integer = digit*
string = '"' ? ANY ? '"'
newline = "\n"

list(X) = newline*, ( X, newline*, (",", newline*, X, newline*)* )?, ","?, newline*

statement = expression
          | let_statement
          | assign_statement

expression = expression_value, annotation?
           | fun_expression
annotation = ":", ty

expression_value = integer
                 | string
                 | identifier
                 | "(", newline*, expression, newline*, ")"
                 | "{", newline*, (statement, newline)*, statement, newline?, "}"
                 | expression_value, "(", list(expression), ")"
                 // todo if

ty = "int"
   | "string"
   | "struct", "{", list(identifier, annotation), "}"

let_statement = "let", identifier, annotation?, "=", expression

assign_statement = identifier, "=", expression

fun_expression = "fun", "(",
           list(identifier, annotation), ")", 
           annotation, "->", expression

